user www  www;
worker_processes 4;

events {
	worker_connections 1024;
}

http {
	include /opt/local/etc/nginx/mime.types;
	default_type application/octet-stream;

	sendfile          on;
	keepalive_timeout 65;
	access_log        off;
	server {
		listen 127.0.0.1:80;
		server_name localhost;
		location /nginx_status {
			stub_status on;
			access_log   off;
			allow 127.0.0.1;
			deny all;
		}
	}
	server {
		listen      80;
		listen [::]:80;
		server_name _;

		return 301 https://$host$request_uri;
	}
	server {
		listen      443 ssl;
		listen [::]:443 ssl;
		server_name _;

		root /var/www/kibana;
		location / {
			index index.html index.htm;
			auth_basic "Restricted";
			auth_basic_user_file auth.htpasswd;
		}
		location ~ ^/_aliases$ {
			proxy_pass http://127.0.0.1:9200;
			proxy_read_timeout 90;
			auth_basic "Restricted";
			auth_basic_user_file auth.htpasswd;
		}
		location ~ ^/.*/_aliases$ {
			proxy_pass http://127.0.0.1:9200;
			proxy_read_timeout 90;
			auth_basic "Restricted";
			auth_basic_user_file auth.htpasswd;
		}
		location ~ ^/_nodes$ {
			proxy_pass http://127.0.0.1:9200;
			proxy_read_timeout 90;
			auth_basic "Restricted";
			auth_basic_user_file auth.htpasswd;
		}
		location ~ ^/.*/_search$ {
			proxy_pass http://127.0.0.1:9200;
			proxy_read_timeout 90;
			auth_basic "Restricted";
			auth_basic_user_file auth.htpasswd;
		}
		location ~ ^/.*/_mapping {
			proxy_pass http://127.0.0.1:9200;
			proxy_read_timeout 90;
			auth_basic "Restricted";
			auth_basic_user_file auth.htpasswd;
		}
		# Password protected end points
		location ~ ^/kibana-int/dashboard/.*$ {
			proxy_pass http://127.0.0.1:9200;
			proxy_read_timeout 90;
			limit_except GET {
				proxy_pass http://127.0.0.1:9200;
				auth_basic "Restricted";
				auth_basic_user_file auth.htpasswd;
			}
		}
		location ~ ^/kibana-int/temp.*$ {
			proxy_pass http://127.0.0.1:9200;
			proxy_read_timeout 90;
			limit_except GET {
				proxy_pass http://127.0.0.1:9200;
				auth_basic "Restricted";
				auth_basic_user_file auth.htpasswd;
			}
		}
		
		ssl_certificate     ssl/nginx.pem;
		ssl_certificate_key ssl/nginx.pem;
	}
}
